{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNTKirKhm7J7BvZl75xIfRS"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oiq7m-Eec46V","executionInfo":{"status":"ok","timestamp":1701983609292,"user_tz":300,"elapsed":19691,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"c5955e1a-f6a7-45e1-f9e0-d2d1d256300b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["%cd '/content/drive/MyDrive/Colab Notebooks/CAERS'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZKZi4IN8c5ub","executionInfo":{"status":"ok","timestamp":1701986914803,"user_tz":300,"elapsed":5,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"53888f5a-0003-48ab-bceb-48078f365018"},"execution_count":155,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/CAERS\n"]}]},{"cell_type":"code","source":["\n","import tensorflow as tf\n","from tensorflow.keras.layers import Input, Conv2D, MaxPooling2D, UpSampling2D, Lambda\n","from tensorflow.keras.models import Model\n","from keras import losses\n","\n","from tensorflow.keras.layers import Input, Conv2D, MaxPooling2D, UpSampling2D, Lambda\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.metrics import RootMeanSquaredError"],"metadata":{"id":"DsLgcZ3-dAqh","executionInfo":{"status":"ok","timestamp":1701986914961,"user_tz":300,"elapsed":7,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":156,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import string\n","import os\n","import re\n","from gensim.models import Word2Vec\n","from nltk.tokenize import word_tokenize\n","import nltk\n","from nltk.corpus import stopwords\n","from nltk.stem import WordNetLemmatizer, PorterStemmer\n","from sklearn.preprocessing import LabelEncoder, OneHotEncoder"],"metadata":{"id":"FjCfui_fdD2Q","executionInfo":{"status":"ok","timestamp":1701986915539,"user_tz":300,"elapsed":8,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":157,"outputs":[]},{"cell_type":"code","source":["nltk.download('punkt')\n","nltk.download('stopwords')\n","nltk.download('wordnet')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ukbVJiRmdFPC","executionInfo":{"status":"ok","timestamp":1701986916228,"user_tz":300,"elapsed":3,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"d4c9a8f0-4356-44a8-c9fd-07848ee44897"},"execution_count":158,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Package wordnet is already up-to-date!\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":158}]},{"cell_type":"code","source":["movies = pd.read_pickle(\"/content/drive/MyDrive/Colab Notebooks/Data/movie100k.csv\")\n","rating = pd.read_pickle(\"/content/drive/MyDrive/Colab Notebooks/Data/ratings100k.csv\")\n","users  = pd.read_pickle(\"/content/drive/MyDrive/Colab Notebooks/Data/user100k.csv\")"],"metadata":{"id":"Kdps1i3bdHKt","executionInfo":{"status":"ok","timestamp":1701986917444,"user_tz":300,"elapsed":7,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":159,"outputs":[]},{"cell_type":"code","source":["movies.reset_index(inplace=True)\n","movies.rename(columns={'index':'movie_id'},inplace=True)\n","movies.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"8BH-rk9bdSkR","executionInfo":{"status":"ok","timestamp":1701986918728,"user_tz":300,"elapsed":21,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"77c06549-279f-44f9-c656-4092dd44f815"},"execution_count":160,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   movie_id    genre          movie title    rating     wikipedia_page_name  \\\n","0         0  unknown              unknown  3.444444                 Unknown   \n","1         1  unknown  Good Morning (1971)  1.000000  Good Morning Starshine   \n","2         2   Action     Star Wars (1977)  4.358491        Star Wars (film)   \n","\n","                                          movie_plot  \n","0                                                NaN  \n","1                                                NaN  \n","2  Amid a galactic civil war, Rebel Alliance spie...  "],"text/html":["\n","  <div id=\"df-fd2f1ead-754c-4d68-a040-d4181b1548da\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movie_id</th>\n","      <th>genre</th>\n","      <th>movie title</th>\n","      <th>rating</th>\n","      <th>wikipedia_page_name</th>\n","      <th>movie_plot</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>unknown</td>\n","      <td>unknown</td>\n","      <td>3.444444</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>unknown</td>\n","      <td>Good Morning (1971)</td>\n","      <td>1.000000</td>\n","      <td>Good Morning Starshine</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Action</td>\n","      <td>Star Wars (1977)</td>\n","      <td>4.358491</td>\n","      <td>Star Wars (film)</td>\n","      <td>Amid a galactic civil war, Rebel Alliance spie...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd2f1ead-754c-4d68-a040-d4181b1548da')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fd2f1ead-754c-4d68-a040-d4181b1548da button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fd2f1ead-754c-4d68-a040-d4181b1548da');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e30885f4-bc67-4067-9019-ab86efbbb5f8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e30885f4-bc67-4067-9019-ab86efbbb5f8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e30885f4-bc67-4067-9019-ab86efbbb5f8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":160}]},{"cell_type":"code","source":["movies.drop(columns=('rating'),inplace=True)"],"metadata":{"id":"jeUry_6YumIf","executionInfo":{"status":"ok","timestamp":1701986919906,"user_tz":300,"elapsed":7,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":161,"outputs":[]},{"cell_type":"code","source":["rating = rating.rename(columns={\"movie id\": \"movie_id\", \"user id\" : 'user_id'})\n","users = users.rename(columns={\"user id\": \"user_id\"})"],"metadata":{"id":"1vqgxtA8eFwl","executionInfo":{"status":"ok","timestamp":1701986920583,"user_tz":300,"elapsed":8,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":162,"outputs":[]},{"cell_type":"code","source":["rating.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"IquqB1oSfMmS","executionInfo":{"status":"ok","timestamp":1701986921513,"user_tz":300,"elapsed":337,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"e524ba23-22ad-4155-b0e4-cab43c058243"},"execution_count":163,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id  movie_id  rating  timestamp\n","0      196       242       3  881250949\n","1      186       302       3  891717742\n","2       22       377       1  878887116\n","3      244        51       2  880606923\n","4      166       346       1  886397596"],"text/html":["\n","  <div id=\"df-11bf872e-e161-492c-85dc-c426f7573704\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>movie_id</th>\n","      <th>rating</th>\n","      <th>timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>196</td>\n","      <td>242</td>\n","      <td>3</td>\n","      <td>881250949</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>186</td>\n","      <td>302</td>\n","      <td>3</td>\n","      <td>891717742</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>22</td>\n","      <td>377</td>\n","      <td>1</td>\n","      <td>878887116</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>244</td>\n","      <td>51</td>\n","      <td>2</td>\n","      <td>880606923</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>166</td>\n","      <td>346</td>\n","      <td>1</td>\n","      <td>886397596</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11bf872e-e161-492c-85dc-c426f7573704')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-11bf872e-e161-492c-85dc-c426f7573704 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-11bf872e-e161-492c-85dc-c426f7573704');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-55ed1937-f1d2-4d8f-812d-e603a96384bf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-55ed1937-f1d2-4d8f-812d-e603a96384bf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-55ed1937-f1d2-4d8f-812d-e603a96384bf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":163}]},{"cell_type":"code","source":["allData = rating.merge(movies, on='movie_id', how='inner')\n","allData = allData.merge(users, on='user_id', how='inner')"],"metadata":{"id":"aVfQOlv5dotw","executionInfo":{"status":"ok","timestamp":1701986921833,"user_tz":300,"elapsed":161,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":164,"outputs":[]},{"cell_type":"code","source":["allData.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"yqZib-6KdryR","executionInfo":{"status":"ok","timestamp":1701986922573,"user_tz":300,"elapsed":150,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"3044d65e-3f04-44c1-d295-e64f674c9c74"},"execution_count":165,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id  movie_id  rating  timestamp        genre  \\\n","0      244        51       2  880606923          War   \n","1      244        40       2  880608016      Mystery   \n","2      244         1       4  880604405      unknown   \n","3      244        32       2  880605514       Horror   \n","4      244        20       4  880604758  Documentary   \n","\n","                     movie title                 wikipedia_page_name  \\\n","0              Casablanca (1942)                   Casablanca (film)   \n","1                 Vertigo (1958)                      Vertigo (film)   \n","2            Good Morning (1971)              Good Morning Starshine   \n","3                  Psycho (1960)                  Psycho (1960 film)   \n","4  Great Day in Harlem, A (1994)  A Great Day in Harlem (photograph)   \n","\n","                                          movie_plot  age gender  occupation  \\\n","0  In December 1941, American expatriate Rick Bla...   28      M  technician   \n","1  After a rooftop chase in which a fellow police...   28      M  technician   \n","2                                                NaN   28      M  technician   \n","3  During a Friday afternoon tryst in a Phoenix h...   28      M  technician   \n","4                                                NaN   28      M  technician   \n","\n","  zip code  \n","0    80525  \n","1    80525  \n","2    80525  \n","3    80525  \n","4    80525  "],"text/html":["\n","  <div id=\"df-d5844ee1-28c4-49fe-8a15-4bfadab350a3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>movie_id</th>\n","      <th>rating</th>\n","      <th>timestamp</th>\n","      <th>genre</th>\n","      <th>movie title</th>\n","      <th>wikipedia_page_name</th>\n","      <th>movie_plot</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>occupation</th>\n","      <th>zip code</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>244</td>\n","      <td>51</td>\n","      <td>2</td>\n","      <td>880606923</td>\n","      <td>War</td>\n","      <td>Casablanca (1942)</td>\n","      <td>Casablanca (film)</td>\n","      <td>In December 1941, American expatriate Rick Bla...</td>\n","      <td>28</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>80525</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>244</td>\n","      <td>40</td>\n","      <td>2</td>\n","      <td>880608016</td>\n","      <td>Mystery</td>\n","      <td>Vertigo (1958)</td>\n","      <td>Vertigo (film)</td>\n","      <td>After a rooftop chase in which a fellow police...</td>\n","      <td>28</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>80525</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>244</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>880604405</td>\n","      <td>unknown</td>\n","      <td>Good Morning (1971)</td>\n","      <td>Good Morning Starshine</td>\n","      <td>NaN</td>\n","      <td>28</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>80525</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>244</td>\n","      <td>32</td>\n","      <td>2</td>\n","      <td>880605514</td>\n","      <td>Horror</td>\n","      <td>Psycho (1960)</td>\n","      <td>Psycho (1960 film)</td>\n","      <td>During a Friday afternoon tryst in a Phoenix h...</td>\n","      <td>28</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>80525</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>244</td>\n","      <td>20</td>\n","      <td>4</td>\n","      <td>880604758</td>\n","      <td>Documentary</td>\n","      <td>Great Day in Harlem, A (1994)</td>\n","      <td>A Great Day in Harlem (photograph)</td>\n","      <td>NaN</td>\n","      <td>28</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>80525</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5844ee1-28c4-49fe-8a15-4bfadab350a3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d5844ee1-28c4-49fe-8a15-4bfadab350a3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d5844ee1-28c4-49fe-8a15-4bfadab350a3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3f32c141-4b10-43f2-a920-c549da868125\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3f32c141-4b10-43f2-a920-c549da868125')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3f32c141-4b10-43f2-a920-c549da868125 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":165}]},{"cell_type":"code","source":["np.sort(allData.movie_id.unique())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A3rUVMQjdz_c","executionInfo":{"status":"ok","timestamp":1701986923723,"user_tz":300,"elapsed":161,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"004619fa-7dc2-48cb-b3f4-124390f76b13"},"execution_count":166,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n","       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\n","       35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\n","       52, 53, 54, 55])"]},"metadata":{},"execution_count":166}]},{"cell_type":"code","source":["len(np.sort(allData.user_id.unique()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Je9yXv_QscIT","executionInfo":{"status":"ok","timestamp":1701986924623,"user_tz":300,"elapsed":4,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"d1d45e5f-aa11-47d6-ccaa-a324b689d205"},"execution_count":167,"outputs":[{"output_type":"execute_result","data":{"text/plain":["791"]},"metadata":{},"execution_count":167}]},{"cell_type":"code","execution_count":168,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":138,"status":"ok","timestamp":1701986926155,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"Kx7pyYt0WBzr","outputId":"7e82f07b-2f9c-415d-f53f-25a6976a535d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(6301, 12)"]},"metadata":{},"execution_count":168}],"source":["allData.dropna(inplace=True)\n","allData.shape"]},{"cell_type":"code","execution_count":169,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1701986927173,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"u8GwqyKAWLRT","outputId":"d6f4f512-0296-4de8-870d-3568a581f847"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(6301, 12)"]},"metadata":{},"execution_count":169}],"source":["allData = allData[allData['movie_plot'].apply(len) > 0]\n","allData.shape"]},{"cell_type":"code","execution_count":170,"metadata":{"executionInfo":{"elapsed":134,"status":"ok","timestamp":1701986928278,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"k7ieSQ43aoFC"},"outputs":[],"source":["allData.to_pickle('/content/drive/MyDrive/Colab Notebooks/Data/allData.pkl')\n"]},{"cell_type":"code","execution_count":172,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1701986949188,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"ri13ewtdbSZA","outputId":"d6cf3541-c8e7-4b5d-aa2f-f549cd3be7e4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(6301, 12)"]},"metadata":{},"execution_count":172}],"source":["allData.shape"]},{"cell_type":"code","execution_count":173,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":159,"status":"ok","timestamp":1701986956876,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"dKk6MXtXWr1H","outputId":"65c4d1c1-2075-4d41-db60-e244391600fe"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-173-d7eea9451d2a>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  movies.drop_duplicates(subset=['movie_plot', 'movie_id'], inplace=True)\n"]}],"source":["movies = allData[['movie_plot', 'genre', 'movie_id','movie title']]\n","\n","# Remove duplicates in the 'movies' DataFrame\n","movies.drop_duplicates(subset=['movie_plot', 'movie_id'], inplace=True)\n"]},{"cell_type":"code","execution_count":174,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":133,"status":"ok","timestamp":1701986957976,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"8jO16PkfdHn5","outputId":"9c5c39cd-d1a8-4aa2-f410-5e14a0c36ae4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(48, 4)"]},"metadata":{},"execution_count":174}],"source":["movies.shape"]},{"cell_type":"markdown","metadata":{"id":"3XAu2Q_wiAe3"},"source":["# Movie Embeding"]},{"cell_type":"markdown","metadata":{"id":"UiZ_xbxwD_NN"},"source":["##Stemming Lematizing"]},{"cell_type":"code","execution_count":134,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1701986690617,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"yNGWyw7iEKJD","outputId":"5fe487b3-edfc-4a57-9e5a-b2042c02d4ca"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-134-3f46fdef91b3>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  movies['movie_plot'] = movies['movie_plot'].apply(lambda x: x.translate(str.maketrans('', '', string.punctuation)))\n"]}],"source":["# remove punctuation\n","movies['movie_plot'] = movies['movie_plot'].apply(lambda x: x.translate(str.maketrans('', '', string.punctuation)))"]},{"cell_type":"code","execution_count":135,"metadata":{"id":"TSKiUxi3jcc3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701986691513,"user_tz":300,"elapsed":898,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"20704356-0398-4cf4-b6d8-50fd36133ac2"},"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:gensim.models.word2vec:Each 'sentences' item should be a list of words (usually unicode strings). First item here is instead plain <class 'str'>.\n"]}],"source":["df_movies = pd.DataFrame()\n","movieEmbeding = pd.DataFrame()\n","df_movies['movie_plot']  = movies['movie_plot'].apply(lambda x: word_tokenize(x.lower()))\n","df_movies['movie title'] = movies['movie title'].apply(lambda x: word_tokenize(x.lower()))\n","#Stop words\n","stop_words = set(stopwords.words('english'))\n","df_movies['movie_plot'] = df_movies['movie_plot'].apply(lambda sentence: [word for word in sentence if word not in stop_words])\n","\n","#Lemmatizer\n","lemmatizer = WordNetLemmatizer()\n","df_movies['movie_plot'] = df_movies['movie_plot'].apply(lambda sentence: [lemmatizer.lemmatize(word) for word in sentence])\n","\n","#stemming\n","stemmer = PorterStemmer()\n","df_movies['movie_plot'] = df_movies['movie_plot'].apply(lambda sentence: [stemmer.stem(word) for word in sentence])\n","\n","\n","genre_model = Word2Vec(sentences=movies['genre'], vector_size=150, window=5, min_count=1, sg=0)\n","movieplot_model = Word2Vec(sentences=df_movies['movie_plot'], vector_size=150, window=5, min_count=1, sg=0)\n","movie_name_model = Word2Vec(sentences=df_movies['movie title'], vector_size=150, window=5, min_count=1, sg=0)\n","movieEmbeding['genre'] = movies['genre'].apply(lambda x: sum(genre_model.wv[word] for word in x) / len(x) if len(x) > 0 else [])\n","movieEmbeding['plot'] = df_movies['movie_plot'].apply(lambda x: sum(movieplot_model.wv[word] for word in x) / len(x) if len(x) > 0 else [])\n","movieEmbeding['name'] = df_movies['movie title'].apply(lambda x: sum(movie_name_model.wv[word] for word in x) / len(x) if len(x) > 0 else [])"]},{"cell_type":"code","execution_count":136,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1701986691513,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"0Kvgs6WYUCZz","outputId":"08085fd9-67d5-4ec6-852e-748621547bb6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(48, 3)"]},"metadata":{},"execution_count":136}],"source":["movieEmbeding.shape"]},{"cell_type":"code","source":[],"metadata":{"id":"GcJ1Ozz_jUbK","executionInfo":{"status":"ok","timestamp":1701986691513,"user_tz":300,"elapsed":5,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":136,"outputs":[]},{"cell_type":"code","execution_count":137,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1701986692615,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"Tv8wcgGpNzAR","outputId":"cbfb709a-0f18-4249-b8dd-594ca20134f0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["genre    0\n","plot     0\n","name     0\n","dtype: int64"]},"metadata":{},"execution_count":137}],"source":["movieEmbeding.isna().sum()"]},{"cell_type":"code","execution_count":138,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1701986693067,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"Xm5EJQ5fxIyd","outputId":"2719b9ec-d591-4729-9cd9-a449d2299526"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(48, 3)"]},"metadata":{},"execution_count":138}],"source":["movieEmbeding.shape"]},{"cell_type":"markdown","metadata":{"id":"SfvhHUObtaCr"},"source":["#User Embeding"]},{"cell_type":"code","source":["users = allData[['user_id','age'\t,'gender'\t,'occupation'\t,'zip code']]"],"metadata":{"id":"sPy_QoYMwpEk","executionInfo":{"status":"ok","timestamp":1701986696339,"user_tz":300,"elapsed":198,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":139,"outputs":[]},{"cell_type":"code","execution_count":140,"metadata":{"executionInfo":{"elapsed":196,"status":"ok","timestamp":1701986696743,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"wD3wH6Tg-jEz"},"outputs":[],"source":["users = users.drop_duplicates()"]},{"cell_type":"code","execution_count":141,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":175,"status":"ok","timestamp":1701986697070,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"FBYxH8mMsBlm","outputId":"e4e249f7-8731-4da8-c0df-7a201bc3d809"},"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:gensim.models.word2vec:Each 'sentences' item should be a list of words (usually unicode strings). First item here is instead plain <class 'str'>.\n"]}],"source":["from gensim.models import Word2Vec\n","from nltk.tokenize import word_tokenize\n","import pandas as pd\n","from sklearn.preprocessing import MinMaxScaler\n","\n","\n","userEmbeddings = pd.DataFrame()\n","\n","# Preprocess and tokenize the \"occupation\" column\n","# userEmbeddings['occupation'] = users['occupation'].apply(lambda x: word_tokenize(x.lower()))\n","\n","# Concatenate the two lists within each row, handling NaN values\n","# userEmbeddings['combined_occupation'] = userEmbeddings['occupation'].apply(lambda x: x[0] + x[1] if len(x) == 2 else x[0] if len(x) == 1 else [])\n","# Train Word2Vec model for occupation\n","model_occ = Word2Vec(sentences=users['occupation'], vector_size=150, window=5, min_count=1, sg=0)\n","\n","# Train Word2Vec model for gender\n","model_gen = Word2Vec(sentences=users['gender'].apply(lambda x: [x]), vector_size=150, window=5, min_count=1, sg=0)\n","\n","# Create userEmbeddings DataFrame\n","\n","# Use Word2Vec embeddings for occupation and gender\n","userEmbeddings['occupation'] = users['occupation'].apply(lambda x: sum(model_occ.wv[word] for word in x) / len(x) if len(x) > 0 else [])\n","userEmbeddings['gender'] = users['gender'].apply(lambda x: model_gen.wv[x])\n","\n","\n"]},{"cell_type":"code","execution_count":142,"metadata":{"id":"9ERSxCY5UKb6","executionInfo":{"status":"ok","timestamp":1701986700378,"user_tz":300,"elapsed":148,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"outputs":[],"source":["tokenized_zip_codes = [zip_code.split() for zip_code in users['zip code']]\n","model_zip = Word2Vec(sentences=tokenized_zip_codes, vector_size=150, window=5, min_count=1, sg=0)\n","userEmbeddings['zip_code'] = [model_zip.wv[i] for i in tokenized_zip_codes]"]},{"cell_type":"code","execution_count":143,"metadata":{"id":"we4Gj_li7Avo","executionInfo":{"status":"ok","timestamp":1701986701803,"user_tz":300,"elapsed":146,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"outputs":[],"source":["userEmbeddings['zip_code'] = userEmbeddings['zip_code'].apply(lambda x: x[0])"]},{"cell_type":"code","execution_count":144,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":289,"status":"ok","timestamp":1701986702648,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"bhA8cU6tlY7y","outputId":"5fcd94c0-7567-4ccf-d4e7-d67bf990c200"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(781, 3)"]},"metadata":{},"execution_count":144}],"source":["userEmbeddings.shape"]},{"cell_type":"code","execution_count":145,"metadata":{"id":"ERZ7TEH6oVlJ","executionInfo":{"status":"ok","timestamp":1701986705040,"user_tz":300,"elapsed":182,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"outputs":[],"source":["movieEmbedingNp =  movieEmbeding.to_numpy()\n","userEmbeddings.dropna(inplace=True)\n","userEmbeddingNp =  userEmbeddings.to_numpy()\n"]},{"cell_type":"code","execution_count":147,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":402,"status":"ok","timestamp":1701986742033,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"sPJfIoP9CEY8","outputId":"1c283c99-5b43-454f-cf89-53e064ed6d10"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(48, 3)"]},"metadata":{},"execution_count":147}],"source":["movieEmbeding.shape"]},{"cell_type":"code","execution_count":148,"metadata":{"id":"ApdmGXZiZ4zD","executionInfo":{"status":"ok","timestamp":1701986742829,"user_tz":300,"elapsed":7,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"outputs":[],"source":["U = np.array([np.concatenate(col) for col in userEmbeddingNp])\n","M = np.array([np.concatenate(col) for col in movieEmbedingNp])\n"]},{"cell_type":"code","execution_count":149,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1701986746448,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"GH0h4nvw1AGN","outputId":"6cd5338c-fd60-43b1-8025-bc594c9957e5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(781, 450)"]},"metadata":{},"execution_count":149}],"source":["U.shape"]},{"cell_type":"code","execution_count":150,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1701986748161,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"xvXKU30FO5aC","outputId":"0c887adc-bca3-499f-bfc8-a08df105cd99"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(48, 450)"]},"metadata":{},"execution_count":150}],"source":["\n","M.shape"]},{"cell_type":"code","execution_count":151,"metadata":{"id":"JIFy7sCSYI3P","executionInfo":{"status":"ok","timestamp":1701986750039,"user_tz":300,"elapsed":133,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"outputs":[],"source":["\n","dot = np.dot(U, M.T)"]},{"cell_type":"code","source":["allData.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"04hM0Va_kPWT","executionInfo":{"status":"ok","timestamp":1701986751974,"user_tz":300,"elapsed":244,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"8c4a0794-3f51-48bc-f599-40849941bef6"},"execution_count":152,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id  movie_id  rating  timestamp    genre             movie title  \\\n","0      244        51       2  880606923      War       Casablanca (1942)   \n","1      244        40       2  880608016  Mystery          Vertigo (1958)   \n","3      244        32       2  880605514   Horror           Psycho (1960)   \n","5      244        26       5  880606274  Fantasy         Star Kid (1997)   \n","6      244        54       2  880607335  Western  Wild Bunch, The (1969)   \n","\n","  wikipedia_page_name                                         movie_plot  age  \\\n","0   Casablanca (film)  In December 1941, American expatriate Rick Bla...   28   \n","1      Vertigo (film)  After a rooftop chase in which a fellow police...   28   \n","3  Psycho (1960 film)  During a Friday afternoon tryst in a Phoenix h...   28   \n","5            Star Kid  The life of shy, seventh-grader Spencer Griffi...   28   \n","6      The Wild Bunch  In 1913 Texas, Pike Bishop, the leader of a ga...   28   \n","\n","  gender  occupation zip code  \n","0      M  technician    80525  \n","1      M  technician    80525  \n","3      M  technician    80525  \n","5      M  technician    80525  \n","6      M  technician    80525  "],"text/html":["\n","  <div id=\"df-8414468a-04a4-40f8-8cca-75c7a7f146ae\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>movie_id</th>\n","      <th>rating</th>\n","      <th>timestamp</th>\n","      <th>genre</th>\n","      <th>movie title</th>\n","      <th>wikipedia_page_name</th>\n","      <th>movie_plot</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>occupation</th>\n","      <th>zip code</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>244</td>\n","      <td>51</td>\n","      <td>2</td>\n","      <td>880606923</td>\n","      <td>War</td>\n","      <td>Casablanca (1942)</td>\n","      <td>Casablanca (film)</td>\n","      <td>In December 1941, American expatriate Rick Bla...</td>\n","      <td>28</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>80525</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>244</td>\n","      <td>40</td>\n","      <td>2</td>\n","      <td>880608016</td>\n","      <td>Mystery</td>\n","      <td>Vertigo (1958)</td>\n","      <td>Vertigo (film)</td>\n","      <td>After a rooftop chase in which a fellow police...</td>\n","      <td>28</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>80525</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>244</td>\n","      <td>32</td>\n","      <td>2</td>\n","      <td>880605514</td>\n","      <td>Horror</td>\n","      <td>Psycho (1960)</td>\n","      <td>Psycho (1960 film)</td>\n","      <td>During a Friday afternoon tryst in a Phoenix h...</td>\n","      <td>28</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>80525</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>244</td>\n","      <td>26</td>\n","      <td>5</td>\n","      <td>880606274</td>\n","      <td>Fantasy</td>\n","      <td>Star Kid (1997)</td>\n","      <td>Star Kid</td>\n","      <td>The life of shy, seventh-grader Spencer Griffi...</td>\n","      <td>28</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>80525</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>244</td>\n","      <td>54</td>\n","      <td>2</td>\n","      <td>880607335</td>\n","      <td>Western</td>\n","      <td>Wild Bunch, The (1969)</td>\n","      <td>The Wild Bunch</td>\n","      <td>In 1913 Texas, Pike Bishop, the leader of a ga...</td>\n","      <td>28</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>80525</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8414468a-04a4-40f8-8cca-75c7a7f146ae')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8414468a-04a4-40f8-8cca-75c7a7f146ae button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8414468a-04a4-40f8-8cca-75c7a7f146ae');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-19d0801b-177a-4bdf-9d1d-ce6a4b04cf83\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-19d0801b-177a-4bdf-9d1d-ce6a4b04cf83')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-19d0801b-177a-4bdf-9d1d-ce6a4b04cf83 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":152}]},{"cell_type":"markdown","metadata":{"id":"bCY8X_4nzEI2"},"source":["#Label"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wQgcdtyQOEGd"},"outputs":[],"source":["# label_data = allData[(allData['user_id']<=2000) & (allData['movie_id']<=2000) ]"]},{"cell_type":"code","execution_count":103,"metadata":{"id":"pHOKZNUxzkmH","executionInfo":{"status":"ok","timestamp":1701986260207,"user_tz":300,"elapsed":7,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"outputs":[],"source":["labels = allData.pivot(index='user_id', columns='movie_id', values='rating')"]},{"cell_type":"code","source":["labels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"dzBlznP2SWS4","executionInfo":{"status":"ok","timestamp":1701986267724,"user_tz":300,"elapsed":17,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"0d45f8b1-967c-429c-c702-8e0422d0c3ac"},"execution_count":104,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie_id   2    3    4    5    6    7    8    9    11   12  ...   46   47  \\\n","user_id                                                     ...             \n","1         3.0  4.0  3.0  3.0  5.0  4.0  1.0  5.0  2.0  5.0  ...  4.0  4.0   \n","2         NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN  ...  NaN  NaN   \n","4         NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN  4.0  NaN  ...  NaN  NaN   \n","5         3.0  NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN  ...  NaN  NaN   \n","6         NaN  NaN  NaN  NaN  NaN  2.0  4.0  4.0  NaN  4.0  ...  NaN  3.0   \n","...       ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...   \n","939       NaN  NaN  NaN  NaN  NaN  NaN  NaN  5.0  NaN  NaN  ...  NaN  NaN   \n","940       NaN  NaN  2.0  NaN  NaN  4.0  5.0  3.0  NaN  4.0  ...  NaN  3.0   \n","941       NaN  NaN  NaN  NaN  NaN  4.0  NaN  NaN  NaN  NaN  ...  NaN  NaN   \n","942       NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN  ...  NaN  NaN   \n","943       5.0  NaN  NaN  NaN  NaN  NaN  NaN  3.0  4.0  5.0  ...  NaN  NaN   \n","\n","movie_id   48   49   50   51   52   53   54   55  \n","user_id                                           \n","1         5.0  3.0  5.0  4.0  4.0  3.0  3.0  5.0  \n","2         NaN  NaN  5.0  NaN  NaN  NaN  NaN  NaN  \n","4         NaN  NaN  5.0  NaN  NaN  NaN  NaN  NaN  \n","5         NaN  NaN  4.0  NaN  NaN  NaN  NaN  NaN  \n","6         NaN  NaN  4.0  NaN  NaN  NaN  NaN  NaN  \n","...       ...  ...  ...  ...  ...  ...  ...  ...  \n","939       NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN  \n","940       NaN  NaN  4.0  NaN  NaN  NaN  NaN  NaN  \n","941       NaN  NaN  NaN  NaN  NaN  NaN  NaN  NaN  \n","942       NaN  NaN  5.0  NaN  NaN  NaN  NaN  NaN  \n","943       NaN  NaN  4.0  1.0  NaN  3.0  4.0  5.0  \n","\n","[781 rows x 48 columns]"],"text/html":["\n","  <div id=\"df-3c90177c-4ad3-4ae2-913b-b5f36f3153c5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>movie_id</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>11</th>\n","      <th>12</th>\n","      <th>...</th>\n","      <th>46</th>\n","      <th>47</th>\n","      <th>48</th>\n","      <th>49</th>\n","      <th>50</th>\n","      <th>51</th>\n","      <th>52</th>\n","      <th>53</th>\n","      <th>54</th>\n","      <th>55</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>...</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>939</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>940</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>941</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>942</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>943</th>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>781 rows × 48 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c90177c-4ad3-4ae2-913b-b5f36f3153c5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3c90177c-4ad3-4ae2-913b-b5f36f3153c5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3c90177c-4ad3-4ae2-913b-b5f36f3153c5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0a822160-a54d-4b4a-8810-06e49b33b618\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0a822160-a54d-4b4a-8810-06e49b33b618')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0a822160-a54d-4b4a-8810-06e49b33b618 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["len(allData.user_id.unique())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QeG4S0SiofOs","executionInfo":{"status":"ok","timestamp":1701878140667,"user_tz":300,"elapsed":9,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"08f573ec-f33e-44bc-b247-2603bedb3f44"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["781"]},"metadata":{},"execution_count":204}]},{"cell_type":"code","source":["labels.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kVDTo5KGpXZ8","executionInfo":{"status":"ok","timestamp":1701877115014,"user_tz":300,"elapsed":14,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"44356879-f9d9-4b0b-c001-9f78c0de6566"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(781, 48)"]},"metadata":{},"execution_count":163}]},{"cell_type":"code","source":["allData.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wKlUzbXSoicm","executionInfo":{"status":"ok","timestamp":1701877116100,"user_tz":300,"elapsed":11,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"b375a5ba-164e-4b88-f270-26a66b45823c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(6301, 12)"]},"metadata":{},"execution_count":164}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1701877118378,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"IWBwA7pY1ESN","outputId":"ba40c65c-fc9a-45d1-9cd1-79151a420c08"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1423"]},"metadata":{},"execution_count":165}],"source":["sum(labels.isna())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7rTv8Ymq7f4N"},"outputs":[],"source":["labels = labels.fillna(0)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"executionInfo":{"elapsed":22,"status":"ok","timestamp":1701877120484,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"},"user_tz":300},"id":"banrBdPA7l7J","outputId":"271cbb16-decc-4fc6-b6ef-f09f77914b7f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie_id   2    3    4    5    6    7    8    9    11   12  ...   46   47  \\\n","user_id                                                     ...             \n","1         3.0  4.0  3.0  3.0  5.0  4.0  1.0  5.0  2.0  5.0  ...  4.0  4.0   \n","2         0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n","4         0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  4.0  0.0  ...  0.0  0.0   \n","5         3.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0   \n","6         0.0  0.0  0.0  0.0  0.0  2.0  4.0  4.0  0.0  4.0  ...  0.0  3.0   \n","\n","movie_id   48   49   50   51   52   53   54   55  \n","user_id                                           \n","1         5.0  3.0  5.0  4.0  4.0  3.0  3.0  5.0  \n","2         0.0  0.0  5.0  0.0  0.0  0.0  0.0  0.0  \n","4         0.0  0.0  5.0  0.0  0.0  0.0  0.0  0.0  \n","5         0.0  0.0  4.0  0.0  0.0  0.0  0.0  0.0  \n","6         0.0  0.0  4.0  0.0  0.0  0.0  0.0  0.0  \n","\n","[5 rows x 48 columns]"],"text/html":["\n","  <div id=\"df-a8fe8fee-4349-4e8b-9c58-68bde04ebfaf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>movie_id</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>11</th>\n","      <th>12</th>\n","      <th>...</th>\n","      <th>46</th>\n","      <th>47</th>\n","      <th>48</th>\n","      <th>49</th>\n","      <th>50</th>\n","      <th>51</th>\n","      <th>52</th>\n","      <th>53</th>\n","      <th>54</th>\n","      <th>55</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>3.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>...</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 48 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8fe8fee-4349-4e8b-9c58-68bde04ebfaf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a8fe8fee-4349-4e8b-9c58-68bde04ebfaf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a8fe8fee-4349-4e8b-9c58-68bde04ebfaf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2d500510-fb6f-47c2-9472-ef36e13c2aed\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d500510-fb6f-47c2-9472-ef36e13c2aed')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2d500510-fb6f-47c2-9472-ef36e13c2aed button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":167}],"source":["labels.head()"]},{"cell_type":"code","source":[],"metadata":{"id":"GZNmmU37kZVI"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aaHWJqNEz4EH"},"outputs":[],"source":["pd.DataFrame(dot).to_pickle('DOT100k.pkl')\n","pd.DataFrame(labels).to_pickle('LABELS100k.pkl')"]},{"cell_type":"code","source":["dot = pd.read_pickle('DOT100k.pkl')\n","labels = pd.read_pickle('LABELS100k.pkl')"],"metadata":{"id":"IVtkD7RuJICh","executionInfo":{"status":"ok","timestamp":1701983660308,"user_tz":300,"elapsed":579,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["labels.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YpF4u228mcnc","executionInfo":{"status":"ok","timestamp":1701983660900,"user_tz":300,"elapsed":14,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"9cf1ff85-3eae-42cc-9a77-1087b16f38ff"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(781, 48)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","execution_count":7,"metadata":{"id":"fV-mJE-jbJq8","executionInfo":{"status":"ok","timestamp":1701983662337,"user_tz":300,"elapsed":158,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"outputs":[],"source":["# from sklearn.model_selection import train_test_split\n","# X_train, X_test, y_train, y_test = train_test_split(dot, labels, test_size=0.1, random_state=122)\n"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"t8UN-a297U2I","executionInfo":{"status":"ok","timestamp":1701983664821,"user_tz":300,"elapsed":207,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"outputs":[],"source":["def custom_loss(y_true, y_pred):\n","    y_true = tf.cast(y_true, dtype=tf.float32)\n","    y_pred = tf.cast(y_pred, dtype=tf.float32)\n","\n","    mask = y_true > 0  # Create a mask for non-zero values\n","\n","    y_true_masked = tf.boolean_mask(y_true, mask)\n","    y_pred_masked = tf.boolean_mask(y_pred, mask)\n","\n","    squared_errors = tf.square(y_true_masked - y_pred_masked)\n","    mse = tf.reduce_mean(squared_errors)\n","\n","    return mse\n"]},{"cell_type":"code","source":["def RMSE(y_true, y_pred):\n","    y_true = tf.cast(y_true, dtype=tf.float32)\n","    y_pred = tf.cast(y_pred, dtype=tf.float32)\n","\n","    mask = y_true > 0  # Create a mask for non-zero values\n","\n","    y_true_masked = tf.boolean_mask(y_true, mask)\n","    y_pred_masked = tf.boolean_mask(y_pred, mask)\n","\n","    squared_errors = tf.square(y_true_masked - y_pred_masked)\n","    mse = tf.reduce_mean(squared_errors)\n","    rmse = tf.sqrt(mse)\n","    return rmse"],"metadata":{"id":"3w7ijh93mmqK","executionInfo":{"status":"ok","timestamp":1701983665131,"user_tz":300,"elapsed":8,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["def MAE(y_true, y_pred):\n","    y_true = tf.cast(y_true, dtype=tf.float32)\n","    y_pred = tf.cast(y_pred, dtype=tf.float32)\n","\n","    mask = y_true > 0  # Create a mask for non-zero values\n","\n","    y_true_masked = tf.boolean_mask(y_true, mask)\n","    y_pred_masked = tf.boolean_mask(y_pred, mask)\n","\n","    absolute_errors = tf.abs(y_true_masked - y_pred_masked)\n","    mae = tf.reduce_mean(absolute_errors)\n","\n","    return mae\n"],"metadata":{"id":"UAkUExbTm8hC","executionInfo":{"status":"ok","timestamp":1701983665786,"user_tz":300,"elapsed":2,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","execution_count":11,"metadata":{"id":"ssEbpSW-a7Cv","executionInfo":{"status":"ok","timestamp":1701983668850,"user_tz":300,"elapsed":149,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"outputs":[],"source":["X = dot.values[:780,:48]\n","Y =labels.values[:780,:48]"]},{"cell_type":"code","source":["X_train = X.reshape((1, -1, 48, 1))\n","y_train = Y.reshape((1, -1, 48, 1))\n"],"metadata":{"id":"sPjzSMrsCn_w","executionInfo":{"status":"ok","timestamp":1701983674167,"user_tz":300,"elapsed":127,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","execution_count":17,"metadata":{"id":"l9xsYoZi1ufG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701984181095,"user_tz":300,"elapsed":313,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"3d7a52b3-c7c9-4e05-f23b-a6acaade452d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_2 (InputLayer)        [(None, 780, 48, 1)]      0         \n","                                                                 \n"," conv2d_5 (Conv2D)           (None, 780, 48, 64)       640       \n","                                                                 \n"," max_pooling2d_2 (MaxPoolin  (None, 390, 24, 64)       0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_6 (Conv2D)           (None, 390, 24, 32)       18464     \n","                                                                 \n"," max_pooling2d_3 (MaxPoolin  (None, 195, 12, 32)       0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_7 (Conv2D)           (None, 195, 12, 32)       9248      \n","                                                                 \n"," up_sampling2d_2 (UpSamplin  (None, 390, 24, 32)       0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_8 (Conv2D)           (None, 390, 24, 64)       18496     \n","                                                                 \n"," up_sampling2d_3 (UpSamplin  (None, 780, 48, 64)       0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_9 (Conv2D)           (None, 780, 48, 1)        577       \n","                                                                 \n"," tf.math.multiply_1 (TFOpLa  (None, 780, 48, 1)        0         \n"," mbda)                                                           \n","                                                                 \n","=================================================================\n","Total params: 47425 (185.25 KB)\n","Trainable params: 47425 (185.25 KB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}],"source":["import tensorflow as tf\n","from tensorflow.keras.layers import Input, Conv2D, MaxPooling2D, UpSampling2D\n","from tensorflow.keras.models import Model\n","\n","def convolutional_autoencoder(input_shape):\n","    # Encoder\n","    input_img = Input(shape=input_shape)\n","    x = Conv2D(64, (3, 3), activation='relu', padding='same')(input_img)\n","    x = MaxPooling2D((2, 2), padding='same')(x)\n","    x = Conv2D(32, (3, 3), activation='relu', padding='same')(x)\n","    encoded = MaxPooling2D((2, 2), padding='same')(x)\n","\n","    # Decoder\n","    x = Conv2D(32, (3, 3), activation='relu', padding='same')(encoded)\n","    x = UpSampling2D((2, 2))(x)\n","    x = Conv2D(64, (3, 3), activation='relu', padding='same')(x)\n","    x = UpSampling2D((2, 2))(x)\n","    decoded = Conv2D(1, (3, 3), activation='sigmoid', padding='same')(x)\n","    decoded = decoded*5\n","\n","    # Create the autoencoder model\n","    autoencoder = Model(input_img, decoded)\n","\n","    return autoencoder\n","\n","# Assuming your data shape is (4800, 3000, 1)\n","input_shape = (780, 48, 1)\n","\n","# Create the convolutional autoencoder model\n","autoencoder = convolutional_autoencoder(input_shape)\n","\n","# Print the model summary\n","autoencoder.summary()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Z4zkI0z92HZ6"},"outputs":[],"source":["import numpy as np\n","\n","# Assuming you have your data, X_train, with shape (num_samples, 3094, 1, 1)\n","\n","# Set the batch size\n","# Compile the model\n","autoencoder.compile(optimizer='adam', loss=custom_loss)\n","\n","# Fit the model with your data\n","history = autoencoder.fit(X_train, y_train, epochs=30, batch_size=32, shuffle=True)\n"]},{"cell_type":"code","source":["from keras.models import load_model\n","\n","# ... (Your existing code for data preparation, model creation, and training)\n","\n","# Save the trained model to a file\n","autoencoder.save(\"autoencoder_model.h5\")"],"metadata":{"id":"hROPX6z9I5o1","executionInfo":{"status":"ok","timestamp":1701984362223,"user_tz":300,"elapsed":35815,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["# import matplotlib.pyplot as plt\n","\n","# # Extract RMSE and MAE from the history object\n","# rmse = history.history['loss']\n","# mae = history.history['MAE']\n","\n","\n","# plt.figure(figsize=(12, 6))\n","\n","# # Plot training RMSE\n","# plt.subplot(1, 2, 1)\n","# plt.plot(rmse, label='Training RMSE')\n","# plt.title('Training RMSE')\n","# plt.xlabel('Epochs')\n","# plt.ylabel('RMSE')\n","# plt.legend()\n","\n","# # Plot training MAE\n","# plt.subplot(1, 2, 2)\n","# plt.plot(mae, label='Training MAE')\n","# plt.title('Training MAE')\n","# plt.xlabel('Epochs')\n","# plt.ylabel('MAE')\n","# plt.legend()\n","\n","# plt.tight_layout()\n","# plt.show()\n"],"metadata":{"id":"qYcJsVOktOu1","executionInfo":{"status":"ok","timestamp":1701984481147,"user_tz":300,"elapsed":179,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["predictions = autoencoder.predict(X_train)"],"metadata":{"id":"-IhtsxtVrHle","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701987365455,"user_tz":300,"elapsed":590,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"c9132ee6-9ec6-4e23-fb1c-820876f1dd0c"},"execution_count":183,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 188ms/step\n"]}]},{"cell_type":"code","source":["predictions.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fyrb9AXqPTxD","executionInfo":{"status":"ok","timestamp":1701987366455,"user_tz":300,"elapsed":193,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}},"outputId":"8a841040-fab7-45a2-a989-e2fde7d57fd6"},"execution_count":184,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1, 780, 48, 1)"]},"metadata":{},"execution_count":184}]},{"cell_type":"code","source":["mask = y_train > 0  # Create a mask for non-zero values"],"metadata":{"id":"yfOUijOjLmez","executionInfo":{"status":"ok","timestamp":1701987368064,"user_tz":300,"elapsed":158,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":185,"outputs":[]},{"cell_type":"code","source":["predictions = predictions * mask"],"metadata":{"id":"3MZGh9RmLs6i","executionInfo":{"status":"ok","timestamp":1701987369329,"user_tz":300,"elapsed":7,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":186,"outputs":[]},{"cell_type":"code","source":["predictions= predictions.reshape((780,48))"],"metadata":{"id":"XBjcym6BPuir","executionInfo":{"status":"ok","timestamp":1701987371394,"user_tz":300,"elapsed":388,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":187,"outputs":[]},{"cell_type":"code","source":["pred = pd.DataFrame(predictions, index=labels.index[:-1],columns=labels.columns)"],"metadata":{"id":"ihR4UvwvL6bZ","executionInfo":{"status":"ok","timestamp":1701987373995,"user_tz":300,"elapsed":128,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":188,"outputs":[]},{"cell_type":"code","source":["pred.to_pickle('predictions.pkl')"],"metadata":{"id":"620fX9usOMpS","executionInfo":{"status":"ok","timestamp":1701987516807,"user_tz":300,"elapsed":181,"user":{"displayName":"Amirhossein Ghadami","userId":"14763792027541053602"}}},"execution_count":190,"outputs":[]},{"cell_type":"code","source":["\n","# Get the indices of the original matrix\n","row_indices, col_indices = np.indices(pred.shape)\n","\n","# Flatten the original matrix, row indices, and column indices\n","flattened_matrix = original_matrix.flatten()\n","flattened_row_indices = row_indices.flatten()\n","flattened_col_indices = col_indices.flatten()\n","\n","# Create a new matrix with three columns: row indices, column indices, and values\n","new_matrix = np.column_stack((flattened_row_indices, flattened_col_indices, flattened_matrix))\n","\n","print(\"Original Matrix:\")\n","print(original_matrix)\n","print(\"\\nNew Matrix:\")\n","print(new_matrix)\n"],"metadata":{"id":"dkqvwC67Wlix"},"execution_count":null,"outputs":[]}]}